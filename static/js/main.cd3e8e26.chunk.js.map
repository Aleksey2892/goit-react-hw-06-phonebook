{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","delContact","filterContacts","target","value","itemsReducer","createReducer","contactsActions","state","filter","contact","filterReducer","_","combineReducers","items","store","configureStore","reducer","contacts","contactsReducer","s","Form","styled","form","Button","button","BtnRemove","Ul","ul","liItem","li","Input","input","Label","label","INITIAL_STATE","ContactForm","resetState","setState","handleChange","handleSubmit","e","preventDefault","NewContact","props","onSubmit","this","type","placeholder","onChange","Component","mapDispatchToProps","actionTypes","connect","onFilter","filterValue","isShowFilter","length","ownProps","itemData","find","item","dispatch","onRemoveContact","onClick","lowerCaseFilter","toLowerCase","includes","isShowContacts","map","key","Div","div","TitleH1","h1","TitleH2","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cd3e8e26.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\nconst delContact = createAction('contacts/del');\nconst filterContacts = createAction('contacts/filter', ({ target }) => ({\n  payload: target.value,\n}));\n\nexport default { addContact, delContact, filterContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport contactsActions from './contactsActions';\n\nconst INITIAL_ITEMS = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst filterContacts = (_, { payload }) => payload;\nconst addContact = (state, { payload }) => [payload, ...state];\nconst delContact = (state, { payload }) => {\n  return state.filter(contact => contact.id !== payload);\n};\n\nconst itemsReducer = createReducer(INITIAL_ITEMS, {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.delContact]: delContact,\n});\nconst filterReducer = createReducer('', {\n  [contactsActions.filterContacts]: filterContacts,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n  max-width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border: 1px solid;\n`;\n\nconst Button = styled.button`\n  width: 150px;\n  display: block;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  transition: all, 0.2s;\n  outline: none;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst BtnRemove = styled.button`\n  min-width: 60px;\n  margin-left: 10px;\n  background: transparent;\n  cursor: pointer;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  font-size: 14px;\n  color: palevioletred;\n  outline: none;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n`;\n\nconst Ul = styled.ul`\n  padding-left: 20px;\n`;\n\nconst liItem = styled.li`\n  margin-bottom: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst s = { Form, Button, BtnRemove, Ul, liItem, Input, Label };\nexport default s;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actionTypes from '../../redux/contacts/contactsActions';\n\nimport PropTypes from 'prop-types';\n\nimport s from '../../styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  resetState = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name && number) {\n      const NewContact = { name, number };\n\n      this.props.onSubmit(NewContact);\n      this.resetState();\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <s.Form onSubmit={this.handleSubmit}>\n          <s.Label>\n            Name\n            <s.Input\n              type=\"text\"\n              placeholder=\"Сontact name\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </s.Label>\n          <s.Label>\n            Number\n            <s.Input\n              type=\"number\"\n              placeholder=\"Сontact number\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </s.Label>\n\n          <s.Button type=\"submit\">Add contact</s.Button>\n        </s.Form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onSubmit: actionTypes.addContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  text-align: center;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nconst Filter = ({ contacts, filterValue, onFilter }) => {\n  const isShowFilter = contacts.length > 2;\n\n  return (\n    <>\n      {isShowFilter && (\n        <div>\n          <p>Find contacts by name</p>\n          <Input\n            type=\"text\"\n            placeholder=\"Filter\"\n            name=\"filter\"\n            value={filterValue}\n            onChange={onFilter}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.items,\n    filterValue: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  onFilter: contactsActions.filterContacts,\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport PropTypes from 'prop-types';\n\nimport s from '../../styled';\n\nconst ContactListItem = ({ name, number, onRemoveContact }) => (\n  <s.liItem>\n    {name}: {number}\n    <s.BtnRemove type=\"button\" onClick={onRemoveContact}>\n      Delete\n    </s.BtnRemove>\n  </s.liItem>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemData = state.contacts.items.find(item => ownProps.id === item.id);\n\n  return {\n    ...itemData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemoveContact: () => dispatch(contactsActions.delContact(ownProps.id)),\n});\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\n\nimport s from '../../styled';\n\nconst ContactList = ({ contacts }) => {\n  const isShowContacts = contacts.length > 0;\n\n  return (\n    <>\n      {isShowContacts && (\n        <s.Ul>\n          {contacts.map(({ id }) => (\n            <ContactListItem key={id} id={id} />\n          ))}\n        </s.Ul>\n      )}\n\n      {!isShowContacts && <p>No contacts in data :(</p>}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const lowerCaseFilter = filter.toLowerCase();\n\n  const getWithFilterContacts = () => {\n    if (filter) {\n      return items.filter(item =>\n        item.name.toLowerCase().includes(lowerCaseFilter),\n      );\n    }\n\n    return items;\n  };\n\n  return {\n    contacts: getWithFilterContacts(),\n  };\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  margin: 0 auto;\n  padding: 10px 10px;\n  max-width: 500px;\n`;\nconst TitleH1 = styled.h1`\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst TitleH2 = styled(TitleH1)``;\n\nexport default function App() {\n  return (\n    <Div>\n      <TitleH1>Phonebook</TitleH1>\n\n      <ContactForm />\n\n      <TitleH2>Contacts</TitleH2>\n\n      <Filter />\n\n      <ContactList />\n    </Div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}